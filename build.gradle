/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */
buildscript {
	ext {
		springBootVersion = '2.2.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.bharuwa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
//	compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '8.0.47'

	//JWT WEB TOKEN
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'

	// swagger
//	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.0.1'
//	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.0.2'

	implementation("io.springfox:springfox-swagger2:2.7.0") {
		exclude module: 'mapstruct' // necessary in my case to not end up with multiple mapstruct versions
	}
	implementation "io.springfox:springfox-bean-validators:2.7.0"
	implementation "io.springfox:springfox-swagger-ui:2.7.0"


	// https://mvnrepository.com/artifact/org.ektorp/org.ektorp.spring
	implementation group: 'org.ektorp', name: 'org.ektorp.spring', version: '1.5.0'

	//CSV Reader
	implementation group: 'com.opencsv', name: 'opencsv', version: '3.3'

	// https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
//	compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0.1'

	// https://mvnrepository.com/artifact/com.itextpdf/itextpdf
	implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'

	//JWT WEB TOKEN
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'

	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

	// Amazon
	implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.11.575'


//	implementation 'org.javassist:javassist:3.18.2-GA'          // workround for ${javassist.version} placeholder issue*
//	implementation 'com.github.cloudyrock.mongock:mongock-core:2.0.2'    // standalone
	implementation 'com.github.cloudyrock.mongock:mongock-spring:2.0.2'  // with Spring (in addition to mongock-core)
//	implementation 'com.github.cloudyrock.mongock:mongock-jongo:2.0.2'   // with Jongo (in addition to mongock-core


	// https://mvnrepository.com/artifact/com.google.zxing/core
	implementation group: 'com.google.zxing', name: 'core', version: '3.4.0'

	// https://mvnrepository.com/artifact/com.google.zxing/javase
	implementation group: 'com.google.zxing', name: 'javase', version: '3.4.0'

	// https://mvnrepository.com/artifact/org.apache.poi/poi
	implementation group: 'org.apache.poi', name: 'poi', version: '3.17'

	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'
	
	compile 'org.json:json:20171018'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
